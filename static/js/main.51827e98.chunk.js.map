{"version":3,"sources":["Header.js","Card.js","CreateCard.js","CardContainer.js","Main.js","index.js"],"names":["Header","state","showModal","className","React","Component","Card","showAnswer","content","this","props","backContent","frontContent","iconClass","cardClass","contentClass","actionClass","onClick","setState","cardNumber","showPrevCard","showNextCard","CreateCard","word","description","showError","errorMessage","onShadowClick","id","placeholder","value","onChange","e","target","length","setTimeout","hideError","Map","onCreateCard","CardContainer","cards","fromJS","boundCallback","hideCreateCard","bind","boundCreateCard","setCard","boundShowPrevCard","boundShowNextCard","size","card","newCards","push","times","arr","_","forEach","num","dotClass","map","get","toJS","generateCards","generateDots","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51827e98.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        showModal: false\n      }\n    }\n     \n    render() {\n      return (\n        <div className='header'>\n          <div className='header-content header-content__left'>\n            \n          </div>\n          <div className='header-content header-content__middle'>\n            Flash Cards\n          </div>\n          <div className='header-content header-content__right'>\n            \n          </div>\n        </div>\n      )\n    }\n  }\n  \n  export default Header;","import React from 'react';\n\nclass Header extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        showModal: false\n      }\n    }\n     \n    render() {\n      return (\n        <div className='header'>\n          <div className='header-content header-content__left'>\n            \n          </div>\n          <div className='header-content header-content__middle'>\n            Flash Cards\n          </div>\n          <div className='header-content header-content__right'>\n            \n          </div>\n        </div>\n      )\n    }\n  }\n  class Card extends React.Component {\n    \n    constructor() {\n      super();\n      this.state = {\n        showAnswer: false\n      }\n    }\n   \n    render() {\n      const content = this.state.showAnswer ? this.props.backContent : this.props.frontContent;\n      const iconClass = this.state.showAnswer ? 'reply' : 'share';\n      const cardClass = this.state.showAnswer ? 'back' : '';\n      const contentClass = this.state.showAnswer ? 'back' : 'front';\n      const actionClass = this.state.showAnswer ? 'active' : '';\n  \n      return (\n        <div \n          className={`card ${cardClass}`}\n          onClick={() => this.setState({showAnswer: !this.state.showAnswer})}\n        >\n        <span className='card__counter'>{this.props.cardNumber + 1}</span>\n          <div \n            className='card__flip-card'\n            onClick={ () => {\n              this.setState({showAnswer: !this.state.showAnswer});\n            }}\n          >\n  \n            <span className={`fa fa-${iconClass}`}/>\n          </div>\n          <div className={`card__content--${contentClass}`}>\n            {content}\n          </div>\n          <div className={`card__actions ${actionClass}`}>\n            <div \n              className='card__prev-button'\n              onClick={() => {\n                this.props.showPrevCard();\n                this.setState({showAnswer: false});\n              }}\n            >\n              Prev\n            </div>\n            <div \n              className='card__next-button'\n              onClick={() => {\n                this.props.showNextCard();\n                this.setState({showAnswer: false});\n              }}\n            >\n              Next\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  export default Card;","import React from 'react';\nimport { Map } from \"immutable\";\n\n\nclass CreateCard extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        word: '',\n        description: '',\n        showError: false\n      }\n    }\n      \n    hideError() {\n      this.setState({showError: !this.state.showError});\n    }\n    \n    render() {\n      const errorMessage = this.state.showError ? 'Please fill in the word and description!' : '';\n      return (\n        <div className='create-card'>\n          <div \n            className='create-card__shadow'\n            onClick={() => {\n              this.props.onShadowClick();\n            }}\n          >\n          </div>\n          <div className='create-card__body'>\n            <h1>Create New Card</h1>\n            <div className='create-card__input-wrapper'>\n              <input \n                id='word' \n                placeholder=\"Word i.e. 'React'\"\n                value = {this.state.word}\n                onChange = {(e) => this.setState({word: e.target.value})}\n              />\n              <input \n                id='description' \n                placeholder=\"Description i.e. 'A front end js framework.'\"\n                value = {this.state.description}\n                onChange = {(e) => this.setState({description: e.target.value})}\n              />\n              <br/>\n              <button \n                id='create-card__button'\n                onClick={() => {\n                 \n                  if (this.state.word.length === 0 || this.state.description.length === 0) {\n                    this.setState({showError: !this.state.showError});\n                    setTimeout(() => this.hideError(), 2000);\n                  } else {\n                    this.props.onShadowClick();\n                    const word = new Map({word: this.state.word, description: this.state.description});\n                    this.props.onCreateCard(word);  \n                  }\n                }}\n              >\n                  Create!\n              </button>\n              <div className='create-card__error'>\n                {errorMessage}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  export default CreateCard;","import React from 'react';\nimport Card from './Card';\nimport CreateCard from './CreateCard';\nimport { fromJS } from \"immutable\";\nimport _ from 'lodash';\n\nclass CardContainer extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        cards: fromJS([{\n          word: 'Jazz',\n          description: 'A type of music of black American origin characterized by improvisation, syncopation, and usually a regular or forceful rhythm, emerging at the beginning of the 20th century.',\n        }, {\n          word: 'Reggae',\n          description: 'Music like Bob Marley, man.',\n        }, {\n          word: 'Folk',\n          description: 'Music like Bob Dylan, man.',\n        }\n      ]),\n        cardNumber: 0\n      };\n      this.boundCallback = this.hideCreateCard.bind(this);\n      this.boundCreateCard = this.setCard.bind(this);\n      this.boundShowPrevCard = this.showPrevCard.bind(this);\n      this.boundShowNextCard = this.showNextCard.bind(this);\n    }\n    \n    hideCreateCard() {\n      this.setState({showModal: false});\n    }\n    \n    showNextCard() {\n      if ((this.state.cardNumber + 1) !== this.state.cards.size) {\n        this.setState({cardNumber: this.state.cardNumber += 1});\n      }\n    }\n    \n    showPrevCard() {\n      if (this.state.cardNumber !== 0) {\n        this.setState({cardNumber: this.state.cardNumber -= 1});\n      }\n    }\n    \n    setCard(card) {\n      const newCards = this.state.cards.push(card);\n      this.setState({cards: newCards});\n    }\n    \n    generateDots() {\n      const times = this.state.cards.size;\n      let arr = [];\n      _.times(times).forEach((num) => {\n        const dotClass = num  === this.state.cardNumber ? 'active' : '';\n        arr.push(\n          <span \n            className={`card-container__dot fa fa-circle ${dotClass}`}\n            onClick={() => this.setState({cardNumber: num})}\n          />\n        )\n      });\n      return arr;\n    }\n    \n    generateCards() {\n      const cards = this.state.cards;\n       const cardsList = cards.map((card) => {\n          return (\n            <Card \n              frontContent={card.get('word')}\n              backContent={card.get('description')}\n              showNextCard={this.boundShowNextCard}\n              showPrevCard = {this.boundShowPrevCard}\n              cardNumber={this.state.cardNumber}\n            />\n            );\n        })\n       return(cardsList.toJS()[this.state.cardNumber]); \n    }\n    render() {\n      return (\n        <div>\n          <span \n              className='card-container__icon  fa fa-plus' \n              onClick={() => {\n                this.setState({showModal: !this.state.showModal});\n              }}\n            />\n          {this.state.showModal \n            ? <CreateCard \n                onShadowClick={this.boundCallback}\n                onCreateCard={this.boundCreateCard}\n              /> \n            : ''}\n          {this.generateCards()}\n          <div className='card-container__dots-wrapper'>\n            {this.generateDots()}\n          </div>\n        </div>\n     );\n    }\n  }\n  \n  export default CardContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './Header';\nimport CardContainer from './CardContainer';\nimport './Main.css';\n\nclass Main extends React.Component {\n    render() {\n      return (\n        <div className='wrapper'>\n          <Header />\n          <div className='content-wrapper'>\n            <CardContainer />\n          </div>\n        </div>\n      );\n    }\n  }\n  \n// ReactDOM.render(<Main />, document.getElementById('root'));\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport Main from './Main'\n\nReactDOM.render(\n  <div>\n    <Main />\n  </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}